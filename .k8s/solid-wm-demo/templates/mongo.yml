apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: solid-mongo-pvc
spec:
  storageClassName: k8s-stud-storage
  accessModes:
    - ReadWriteOnce 
  volumeName: solid-mongo-pv
  resources:
    requests:
      storage: 512Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: solid-mongo
  name: solid-mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: solid-mongo
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: solid-mongo
    spec:
      containers:
        - image: mongo
          name: solid-mongo
          args: ["--dbpath", "/data/db"]
          livenessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: {{ .Values.mongo.username }}
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: {{ .Values.mongo.password }}
          volumeMounts:
            - name: "mongo-data-dir"
              mountPath: "/data/db"
      volumes:
        - name: "mongo-data-dir"
          persistentVolumeClaim:
            claimName: "solid-mongo-pvc"

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: solid-mongo
  name: solid-mongo-svc
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 27017
  selector:
    app: solid-mongo
  type: ClusterIP
status:
  loadBalancer: {}
